{"version":3,"sources":["redux/auth/operations.js","redux/auth/selectors.js","routes/PrivateRoute.js","routes/PublicRoute.js","App/App.js","redux/contacts/actions.js","redux/contacts/reducers.js","redux/contacts/slice.js","redux/auth/slice.js","redux/store.js","index.js"],"names":["BASE_URL","register","createAsyncThunk","user","a","rejectWithValue","fetch","method","headers","body","JSON","stringify","response","json","data","toast","error","message","login","logout","_","getState","state","token","auth","Authorization","currentUser","getIsAuth","isAuth","getUserName","name","getIsFetchingCurrent","isFetchingCurrentUser","getToken","PrivateRoute","Component","component","to","PublicRoute","useSelector","Header","lazy","HomeView","RegisterView","MainView","StatisticsView","App","dispatch","useDispatch","isFetchingCurrent","useEffect","className","fallback","type","color","height","width","path","element","autoClose","setFilter","createAction","filterReducer","createReducer","actions","payload","contactsReducer","combineReducers","filter","phonebookApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchPhonebook","query","providesTags","addContact","mutation","newContact","url","invalidatesTags","deleteContact","contactId","useFetchPhonebookQuery","useDeleteContactMutation","useAddContactMutation","authSlice","createSlice","initialState","email","isLoading","extraReducers","pending","action","fulfilled","rejected","contactsPersistConfig","key","storage","whitelist","blacklist","authPersistConfig","authPersistReducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contacts","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"iTAGMA,EAAQ,wCAEDC,EAAWC,YACpB,gBADoC,uCAEpC,WAAOC,EAAP,sBAAAC,EAAA,6DAAeC,EAAf,EAAeA,gBAAf,kBAE+BC,MAAM,GAAD,OAAIN,EAAJ,iBAA6B,CACrDO,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUR,KALjC,cAEcS,EAFd,gBAO2BA,EAASC,OAPpC,cAOcC,EAPd,OAQQC,YAAM,wCARd,kBASeD,GATf,kCAWQT,EAAgB,CAAEW,MAAO,KAAIC,UAXrC,0DAFoC,yDAiB3BC,EAAQhB,YACjB,aADiC,uCAEjC,WAAOC,EAAP,sBAAAC,EAAA,6DAAeC,EAAf,EAAeA,gBAAf,kBAE+BC,MAAM,GAAD,OAAIN,EAAJ,gBAA4B,CACpDO,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUR,KALjC,cAEcS,EAFd,gBAO2BA,EAASC,OAPpC,cAOcC,EAPd,yBAQWA,GARX,kCAUQT,EAAgB,CAAEW,MAAO,KAAIC,UAVrC,0DAFiC,yDAgBxBE,EAASjB,YAClB,cADkC,uCAElC,WAAOkB,EAAP,wBAAAhB,EAAA,yDAAYC,EAAZ,EAAYA,gBAAiBgB,EAA7B,EAA6BA,SACnBC,EAAQD,IACRE,EAAQD,EAAME,KAAKD,MAF7B,0EAKcjB,MAAM,GAAD,OAAIN,EAAJ,iBAA6B,CACpCO,OAAQ,OACRC,QAAS,CAAEiB,cAAc,UAAD,OAAYF,MAPhD,yDAUQlB,EAAgB,KAAIY,SAV5B,0DAFkC,yDAgBzBS,EAAcxB,YACvB,mBADuC,uCAEvC,WAAOkB,EAAP,4BAAAhB,EAAA,yDAAYC,EAAZ,EAAYA,gBAAiBgB,EAA7B,EAA6BA,SACnBC,EAAQD,IACRE,EAAQD,EAAME,KAAKD,MAF7B,0EAK+BjB,MAAM,GAAD,OAAIN,EAAJ,kBAA8B,CACtDQ,QAAS,CAACiB,cAAc,UAAD,OAAYF,MAN/C,cAKcX,EALd,iBAQ2BA,EAASC,OARpC,eAQcC,EARd,yBASeA,GATf,kCAWIT,EAAgB,KAAIY,SAXxB,0DAFuC,0D,gCCtD3C,wIAAO,IAAMU,EAAY,SAAAL,GAAK,OAAIA,EAAME,KAAKI,QAEhCC,EAAc,SAAAP,GAAK,OAAIA,EAAME,KAAKrB,KAAK2B,MAEvCC,EAAuB,SAAAT,GAAK,OAAIA,EAAME,KAAKQ,uBAE3CC,EAAW,SAAAX,GAAK,OAAIA,EAAME,KAAKD,Q,yKCJrC,SAASW,EAAT,GAAyD,IAAjCN,EAAgC,EAAhCA,OAAmBO,EAAa,EAAxBC,UAErC,OACE,mCACGR,EAAS,cAACO,EAAD,IAAgB,cAAC,IAAD,CAAUE,GAAG,Q,mBCDtC,SAASC,EAAT,GAAgD,IAAdH,EAAa,EAAxBC,UACtBR,EAASW,YAAYZ,KAE3B,OACE,mCACGC,EAAS,cAAC,IAAD,CAAUS,GAAG,UAAa,cAACF,EAAD,M,oBCMpCK,G,MAASC,gBAAK,kBAAM,iCACpBC,EAAWD,gBAAK,kBAAM,gCACtBE,EAAgBF,gBAAK,kBAAM,gCAC3BG,EAAYH,gBAAK,kBAAM,gCACvBI,EAAiBJ,gBAAK,kBAAM,gCAoCnBK,I,IAAAA,EAlCf,WAGE,IAAMC,EAAWC,cACXpB,EAASW,YAAYZ,KACrBJ,EAAQgB,YAAYN,KACpBgB,EAAoBV,YAAYR,KAQtC,OAPAmB,qBAAU,WACR3B,GAASwB,EAASrB,iBAEjB,CAACqB,IAKF,sBAAKI,UAAU,MAAf,UACE,uEACE,eAAC,WAAD,CAAUC,SAAW,cAAC,IAAD,CAAQC,KAAK,YAAYC,MAAM,SAASC,OAAQ,GAAIC,MAAO,KAAhF,UACI,cAAChB,EAAD,CAAQZ,OAAQA,IAClBqB,EACE,cAAC,IAAD,CAAQI,KAAK,YAAYC,MAAM,SAASC,OAAQ,GAAIC,MAAO,KAC3D,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAACpB,EAAD,CAAaV,OAAQA,EAAQQ,UAAWM,MACjE,cAAC,IAAD,CAAOe,KAAK,YAAYC,QAAS,cAACpB,EAAD,CAAaV,OAAQA,EAAQQ,UAAWO,MACzE,cAAC,IAAD,CAAOc,KAAK,QAAQC,QAAS,cAACxB,EAAD,CAAcN,OAAQA,EAAQQ,UAAWQ,MACtE,cAAC,IAAD,CAAOa,KAAK,cAAcC,QAAS,cAACxB,EAAD,CAAcN,OAAQA,EAAQQ,UAAWS,YAIpF,cAAC,IAAD,CAAgBc,UAAW,U,qCCnCpBC,EAAYC,YAAa,cCChCC,EAAgBC,YAAc,GAAD,eAC9BH,GAAY,SAACtC,EAAO0C,GAAR,OAAoBA,EAAQC,YAsB9BC,EALSC,YAAgB,CAEpCC,OAAQN,I,yCCnCCO,EAAeC,YAAU,CAClCC,YAAa,eAEbC,UAAWC,YAAe,CAAEC,QAAS,uDACrCC,SAAU,CAAC,WACXC,UAAW,SAAAC,GACP,MAAO,CACHC,eAAgBD,EAAQE,MAAM,CAC1BA,MAAO,iBAAM,aACbC,aAAc,CAAC,aAGfC,WAAYJ,EAAQK,SAAS,CACzBH,MAAO,SAAAI,GAAU,MAAK,CAClBC,IAAK,YACL7E,OAAQ,OACRE,KAAM0E,IAGVE,gBAAiB,CAAC,aAGlBC,cAAeT,EAAQK,SAAS,CAC5BH,MAAO,SAAAQ,GAAS,MAAK,CACjBH,IAAI,aAAD,OAAeG,GAClBhF,OAAQ,WAGZ8E,gBAAiB,CAAC,iB,GAYtChB,EAHAmB,uBAGAnB,EAFAoB,yBAEApB,EADAqB,sB,MCiDWC,EA9EGC,YAAY,CAC5B9D,KAAM,OACN+D,aAXmB,CACjB1F,KAAM,CAAE2B,KAAM,KAAMgE,MAAO,MAC3BvE,MAAO,KACPS,uBAAuB,EACvBhB,MAAO,KACP+E,WAAW,EACXnE,QAAQ,GAMRoE,eAAa,mBAEZ/F,IAASgG,SAFG,SAEM3E,EAAO4E,GACtB,OAAO,2BAAI5E,GAAX,IAAkByE,WAAW,OAHpB,cAKZ9F,IAASkG,WALG,SAKQ7E,EAAO4E,GACxB,OAAO,2BACA5E,GADP,IAEInB,KAAM+F,EAAOjC,QAAQ9D,KACrBoB,MAAO2E,EAAOjC,QAAQ1C,MACtBS,uBAAuB,EACvBJ,QAAQ,EACRmE,WAAW,OAZN,cAeZ9F,IAASmG,UAfG,SAeO9E,EAAO4E,GACvB,OAAO,2BAAI5E,GAAX,IAAkByE,WAAW,EAAO/E,MAAOkF,EAAOjC,aAhBzC,cAmBZ/C,IAAM+E,SAnBM,SAmBG3E,GACZ,OAAO,2BAAIA,GAAX,IAAkByE,WAAW,OApBpB,cAsBZ7E,IAAMiF,WAtBM,SAsBK7E,EAAO4E,GACrB,OAAO,2BACA5E,GADP,IAEInB,KAAM+F,EAAOjC,QAAQ9D,KACrBoB,MAAO2E,EAAOjC,QAAQ1C,MACtBK,QAAQ,EACRmE,WAAW,OA5BN,cA+BZ7E,IAAMkF,UA/BM,SA+BI9E,EAAO4E,GACpB,OAAO,2BAAI5E,GAAX,IAAkByE,WAAW,EAAO/E,MAAOkF,EAAOjC,aAhCzC,cAmCZ9C,IAAO8E,SAnCK,SAmCI3E,GACb,OAAO,2BAAIA,GAAX,IAAkByE,WAAW,OApCpB,cAsCZ5E,IAAOgF,WAtCK,SAsCM7E,GACf,OAAO,2BACAA,GADP,IAEInB,KAAM,CAAE2B,KAAM,KAAMgE,MAAO,MAC3BvE,MAAO,KACPwE,WAAW,EACXnE,QAAQ,OA5CH,cA+CZT,IAAOiF,UA/CK,SA+CK9E,EAAO4E,GACrB,OAAO,2BAAI5E,GAAX,IAAkByE,WAAW,EAAO/E,MAAOkF,EAAOjC,aAhDzC,cAmDZvC,IAAYuE,SAnDA,SAmDS3E,GAClB,OAAO,2BAAIA,GAAX,IAAkByE,WAAW,EAAM/D,uBAAuB,OApDjD,cAsDZN,IAAYyE,WAtDA,SAsDW7E,EAAO4E,GAC3B,OAAO,2BACA5E,GADP,IAEInB,KAAM+F,EAAOjC,QACbjC,uBAAuB,EACvB+D,WAAW,EACXnE,QAAQ,OA5DH,cA+DZF,IAAY0E,UA/DA,SA+DU9E,EAAO4E,GAC1B,OAAO,2BACA5E,GADP,IAEIyE,WAAW,EACX/E,MAAOkF,EAAOjC,QACdjC,uBAAuB,EACvBJ,QAAQ,OArEH,KA2EjB,QCtEMyE,EAAwB,CAC5BC,IAAK,YACHC,YACAC,UAAW,GACXC,UAAW,CAAC,WAEVC,EAAoB,CACxBJ,IAAK,YACLC,YACAC,UAAW,CAAC,UAGRG,EAAqBC,YAAeF,EAAmBG,GAEvDC,EAAU,sBACTC,YACC,CAACC,kBAAmB,CAChBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHtD,CAMZlD,EAAayC,aAIXU,EAAQC,YAAe,CACzBC,SAAO,GACHC,SAAUf,YAAeP,EAAuBnC,IAD7C,cAGFG,EAAaE,YAAcF,EAAaqD,SAHtC,qBAIGf,GAJH,GAMPG,eASW,GAAEU,QAAOI,UALNC,YAAaL,I,QC7C/BM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAaS,QAAQ,GAAGL,UAAWJ,EAAMI,UAAzC,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKRM,SAASC,eAAe,W","file":"static/js/main.4e843267.chunk.js","sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { toast } from 'react-toastify';\n\nconst BASE_URL = `https://connections-api.herokuapp.com`;\n\nexport const register = createAsyncThunk(\n    \"auth/register\",\n    async (user, { rejectWithValue }) => {\n        try {\n            const response = await fetch(`${BASE_URL}/users/signup`, {\n                method: \"POST\",\n                headers: {\"Content-Type\": \"application/json\",},\n                body: JSON.stringify(user),\n            });\n            const data = await response.json();\n            toast(`Congratulations, you are registered!`);\n            return data;\n        } catch (err) {\n            rejectWithValue({ error: err.message });\n        }\n    }\n);\nexport const login = createAsyncThunk(\n    \"auth/login\",\n    async (user, { rejectWithValue }) => {\n        try {\n            const response = await fetch(`${BASE_URL}/users/login`, {\n                method: \"POST\",\n                headers: {\"Content-Type\": \"application/json\",},\n                body: JSON.stringify(user),\n            });\n            const data = await response.json();\n        return data;\n        } catch (err) {\n            rejectWithValue({ error: err.message });\n        }\n    }\n);\nexport const logout = createAsyncThunk(\n    \"auth/logout\",\n    async (_, { rejectWithValue, getState }) => {\n        const state = getState();\n        const token = state.auth.token;\n        if (!token) return;\n        try {\n            await fetch(`${BASE_URL}/users/logout`, {\n                method: \"POST\",\n                headers: { Authorization: `Bearer ${token}` },\n            });\n        } catch (err) {\n            rejectWithValue(err.message);\n        }\n    }\n);\nexport const currentUser = createAsyncThunk(\n    \"auth/currentUser\",\n    async (_, { rejectWithValue, getState }) => {\n        const state = getState();\n        const token = state.auth.token;\n        if (!token) return;\n        try {\n            const response = await fetch(`${BASE_URL}/users/current`, {\n                headers: {Authorization: `Bearer ${token}`,},\n            });\n            const data = await response.json();\n            return data;\n        } catch (err) {\n        rejectWithValue(err.message);\n    }\n  }\n);\n","export const getIsAuth = state => state.auth.isAuth;\n\nexport const getUserName = state => state.auth.user.name;\n\nexport const getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\n\nexport const getToken = state => state.auth.token;\n\n// const authSelectors = {\n//     getIsAuth,\n//     getUserName,\n//     getIsFetchingCurrent,\n//     getToken,\n// };\n// export default authSelectors;","import { Navigate } from \"react-router-dom\";\n\nexport function PrivateRoute({ isAuth, component: Component }) {\n  \n  return (\n    <>\n      {isAuth ? <Component /> : <Navigate to=\"/\" />}\n    </>\n  );\n}","import { Navigate } from \"react-router-dom\";\nimport { getIsAuth } from \"../redux/auth/selectors\";\nimport { useSelector } from 'react-redux';\n\n\nexport function PublicRoute({ component: Component }) {\n  const isAuth = useSelector(getIsAuth);\n  \n  return (\n    <>\n      {isAuth ? <Navigate to=\"/main\" /> : <Component />}\n    </>\n  );\n}","import React from 'react';\nimport './App.css';\nimport Loader from \"react-loader-spinner\";\nimport { Route, Routes } from 'react-router-dom';\nimport { PrivateRoute } from \"../routes/PrivateRoute\";\nimport { PublicRoute } from \"../routes/PublicRoute\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport {currentUser} from '../redux/auth/operations'\nimport { useEffect } from 'react';\nimport { lazy, Suspense } from 'react';\nimport { getIsAuth } from '../redux/auth/selectors';\nimport { getToken } from '../redux/auth/selectors';\nimport { getIsFetchingCurrent } from '../redux/auth/selectors';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Header = lazy(() => import('../components/Header/Header' /* webpackChunkName: \"header-view\" */));\nconst HomeView = lazy(() => import('../views/HomeView/HomeView' /* webpackChunkName: \"home-view\" */));\nconst RegisterView  = lazy(() => import('../views/RegisterView/RegisterView' /* webpackChunkName: \"register-view\" */));\nconst MainView  = lazy(() => import('../views/MainView/MainView' /* webpackChunkName: \"contacts-view\" */))\nconst StatisticsView = lazy(() => import('../views/StatisticsView/StatisticsView' /* webpackChunkName: \"login-view\" */));\n\nfunction App() {\n\n  \n  const dispatch = useDispatch();\n  const isAuth = useSelector(getIsAuth);\n  const token = useSelector(getToken);\n  const isFetchingCurrent = useSelector(getIsFetchingCurrent);\n  useEffect(() => {\n    token && dispatch(currentUser());\n    // eslint-disable-next-line\n  }, [dispatch]);\n  \n  \n  \n  return (\n    <div className=\"app\">\n      <p>ВПЕРЕД!)</p>\n        <Suspense fallback={ <Loader type=\"ThreeDots\" color=\"orange\" height={80} width={80} />}>\n            <Header isAuth={isAuth}/>\n        {(isFetchingCurrent)\n          ? <Loader type=\"ThreeDots\" color=\"orange\" height={80} width={80} />\n          : <Routes>\n              <Route path=\"/\" element={<PublicRoute isAuth={isAuth} component={HomeView} />} />\n              <Route path=\"/register\" element={<PublicRoute isAuth={isAuth} component={RegisterView} />} />\n              <Route path=\"/main\" element={<PrivateRoute isAuth={isAuth} component={MainView} />} />\n              <Route path=\"/statistics\" element={<PrivateRoute isAuth={isAuth} component={StatisticsView} />} />\n          </Routes>}\n      </Suspense>\n      \n      <ToastContainer autoClose={3000} />\n      </div>\n    );\n}\n\nexport default App;\n","\nimport { createAction } from '@reduxjs/toolkit';\n\n\n// export const addContactRequest = createAction('contacts/addContactRequest');\n// export const addContactSuccess = createAction('contacts/addContactSuccess');\n// export const addContactError = createAction('contacts/addContactError');\n\n// export const deleteContactRequest = createAction('contacts/deleteContactRequest');\n// export const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\n// export const deleteContactError = createAction('contacts/deleteContactError');\n\n// export const fetchContactsRequest = createAction('contacts/fetchContactRequest');\n// export const fetchContactsSuccess = createAction('contacts/fetchContactSuccess');\n// export const fetchContactsError = createAction('contacts/fetchContactError');\n\nexport const setFilter = createAction('filter/set');\n\n","\nimport { combineReducers } from 'redux';\nimport {setFilter} from './actions';\nimport { createReducer } from '@reduxjs/toolkit';\n// import {\n//     fetchContacts,\n//     addContact,\n//     deleteContact\n// } from './operations';\n\n\n// const itemsReducer = createReducer(initialContacts, {\n//     [fetchContacts.fulfilled]: (_, {payload}) => payload,\n//     [addContact.fulfilled]: (state, {payload}) => [...state, payload],\n//     [deleteContact.fulfilled]: (state, {payload}) => state.filter(({id}) => id !== payload.id)\n// });\n\nconst filterReducer = createReducer('', {\n    [setFilter]: (state, actions) => actions.payload\n});\n\n// const loading = createReducer(false, {\n//     [addContactRequest]: () => true,\n//     [addContactSuccess]: () => false,\n//     [addContactError]: () => false,\n//     [deleteContactRequest]: () => true,\n//     [deleteContactSuccess]: () => false,\n//     [deleteContactError]: () => false,\n// [fetchContacts.pending]: () => true\n// });\n\n// const error = createReducer(null, {\n// [fetchContacts.rejected]: (_, {payload}) => payload\n// });\n\nconst contactsReducer = combineReducers({\n    // items: itemsReducer,\n    filter: filterReducer\n});\n\nexport default contactsReducer;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const phonebookApi = createApi({\n    reducerPath: 'phonebookApi',\n    // baseQuery: fetchBaseQuery({ baseUrl: 'https://connections-api.herokuapp.com' }),\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://619d65ca131c600017088eee.mockapi.io/api/v1' }),\n    tagTypes: ['Contact'],\n    endpoints: builder => {\n        return {\n            fetchPhonebook: builder.query({\n                query: () => '/contacts',\n                providesTags: ['Contact'],\n                // headers: (token)=>({Authorization: `Bearer ${createApi.getState().auth.token}`,})\n            }),\n                addContact: builder.mutation({\n                    query: newContact => ({\n                        url: '/contacts',\n                        method: 'POST',\n                        body: newContact,\n                        // headers: {Authorization: `Bearer ${store.auth.token}`,}\n                    }),\n                    invalidatesTags: ['Contact'],\n                    // headers: (token)=>({Authorization: `Bearer ${createApi.getState().auth.token}`,})\n                }),\n                    deleteContact: builder.mutation({\n                        query: contactId => ({\n                            url: `/contacts/${contactId}`,\n                            method: 'DELETE',\n                            // headers: {Authorization: `Bearer ${store.auth.token}`,}\n                        }),\n                        invalidatesTags: ['Contact'],\n                    }),\n        }\n    }\n    \n    ,\n});\n\nexport const {\n    useFetchPhonebookQuery,\n    useDeleteContactMutation,\n    useAddContactMutation\n} = phonebookApi;","import { createSlice } from '@reduxjs/toolkit';\nimport {register, login, logout, currentUser} from './operations';\n\nconst initialState = {\n    user: { name: null, email: null },\n    token: null,\n    isFetchingCurrentUser: false,\n    error: null,\n    isLoading: false,\n    isAuth: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n    extraReducers: {\n\n    [register.pending](state, action) {\n        return {...state, isLoading: true,};\n    },\n    [register.fulfilled](state, action) {\n        return {\n            ...state,\n            user: action.payload.user,\n            token: action.payload.token,\n            isFetchingCurrentUser: false,\n            isAuth: true,\n            isLoading: false,\n        };\n    },\n    [register.rejected](state, action) {\n        return {...state, isLoading: false, error: action.payload};\n    },\n    \n    [login.pending](state) {\n        return {...state, isLoading: true,};\n    },\n    [login.fulfilled](state, action) {\n        return {\n            ...state,\n            user: action.payload.user,\n            token: action.payload.token,\n            isAuth: true,\n            isLoading: false,\n        };\n    },\n    [login.rejected](state, action) {\n        return {...state, isLoading: false, error: action.payload};\n    },\n    \n    [logout.pending](state) {\n        return {...state, isLoading: true};\n    },\n    [logout.fulfilled](state) {\n        return {\n            ...state,\n            user: { name: null, email: null },\n            token: null,\n            isLoading: false,\n            isAuth: false,\n        };\n    },\n    [logout.rejected](state, action) {\n        return {...state, isLoading: false, error: action.payload};\n    },\n\n    [currentUser.pending](state) {\n        return {...state, isLoading: true, isFetchingCurrentUser: true};\n    },\n    [currentUser.fulfilled](state, action) {\n        return {\n            ...state,\n            user: action.payload,\n            isFetchingCurrentUser: false,\n            isLoading: false,\n            isAuth: true,\n        };\n    },\n    [currentUser.rejected](state, action) {\n        return {\n            ...state,\n            isLoading: false,\n            error: action.payload,\n            isFetchingCurrentUser: false,\n            isAuth: false,\n        };\n    },\n  },\n});\n\nexport default authSlice.reducer;","// import { composeWithDevTools } from 'redux-devtools-extension';\n// import { createStore } from 'redux';\n// import { combineReducers } from 'redux';\nimport contactsReducer from './contacts/reducers';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\nimport {\n    persistReducer,\n    persistStore,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport { phonebookApi } from './contacts/slice';\nimport authReducer from './auth/slice';\n\nconst contactsPersistConfig = {\n  key: 'phonebook',\n    storage,\n    whitelist: [],\n    blacklist: ['filter']\n}\nconst authPersistConfig = {\n  key: \"authToken\",\n  storage,\n  whitelist: ['token'],\n};\n\nconst authPersistReducer = persistReducer(authPersistConfig, authReducer);\n\nconst middleware = [\n    ...getDefaultMiddleware(\n        {serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n        }}\n    ),\n    phonebookApi.middleware,\n    // logger\n];\n\nconst store = configureStore({\n    reducer: {\n        contacts: persistReducer(contactsPersistConfig, contactsReducer),\n        // contacts: contactsReducer,\n        [phonebookApi.reducerPath]: phonebookApi.reducer,\n        auth: authPersistReducer,\n    },\n    middleware,\n    // devTools: process.env.MODE.ENV === 'development'\n});\n\nconst persistor = persistStore(store);\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// eslint-disable-next-line\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store'\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading=\"\" persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}